[project]
name = "Dembrane"
version = "0.0.1"
description = "Python project for the Dembrane API"
requires-python = "== 3.11"
dependencies = [
    # API server
    "fastapi==0.109.*",
    "uvicorn[standard]==0.27.*",
    "python-multipart==0.0.*",
    # Langchain
    "langchain==0.1.*",
    "langchain-community==0.0.*",
    "langchain-experimental==0.0.*",
    "langchain-openai==0.0.*",
    "pypdf==4.0.*",
    # SDKs for Models
    "openai==1.57.*",
    "anthropic==0.43.*",
    # Data
    "pandas==2.2.*",
    "numpy==1.26.*",
    "scikit-learn==1.4.*",
    # Tools
    "jinja2==3.1.*",
    "ffmpeg-python>=0.2.0",
    "flower>=2.0.1",
    # Database
    "SQLAlchemy==2.0.*",
    "alembic==1.13.*",
    "psycopg[binary,pool]==3.1.*",
    "pgvector==0.2.*",
    "directus-sdk-py>=1.1.0",
    # Config
    "python-dotenv==1.0.*",
    # Other
    "backoff==2.2.*",
    "aiofiles==23.2.*",
    "sentry-sdk[sqlalchemy,fastapi]",
    "python-jose[cryptography]>=3.3.0",
    # Logging
    "colorlog>=6.9.0",
    # Types
    "types-aiofiles==23.2.*",
    "types-tqdm > 4",
    "pandas-stubs>=2.2.2.240514",
    "types-requests>=2.32.0.20240602",
    "types-python-jose>=3.3.4.20240106",
    "litellm==1.59.*",
    # Additional Dependencies
    "lightrag-dembrane==1.2.7.7",
    "nest-asyncio==1.6.0",
    "pydantic==2.10.6",
    "pydub==0.25.1",
    "pytest==8.3.4",
    "PyYAML==6.0.2",
    # Network and HTTP
    "aiohttp==3.11.14",
    # Configuration
    "configparser==7.2.0",
    # Data and Analysis
    "pipmaster==0.5.1",
    # Utils
    "setuptools==75.8.0",
    # LLM Tools
    "tiktoken==0.9.0",
    "asyncpg==0.30.0",
    "neo4j==5.28.1",
    "boto3==1.37.*",
    # Uncategorized
    "mypy==1.10.*",
    "ruff==0.4.*",
    "isort==5.13.*",
    "tenacity==8.3.*",
    "networkx==3.4.*",
    # tests
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist>=3.6.1",
    "pytest-asyncio",
    # Dramatiq
    "dramatiq[redis,watch]==1.17.*",
    "sentry-dramatiq==0.3.*",
    "apscheduler==3.11.*",
    "dramatiq-workflow==0.2.*",
    "lz4==4.4.*",
    "gevent>=25.4.2",
]

[tool.setuptools]
packages = ["dembrane"]

[tool.rye]
virtual = true
managed = true

[tool.rye.scripts]
"format" = { chain = ["format:isort", "format:ruff", "fix:ruff"] }
"format:ruff" = "ruff format"
"format:isort" = "isort ."
"lint" = { chain = ["check:ruff", "typecheck"] }
"check:ruff" = "ruff ."
"fix:ruff" = "ruff --fix ."
typecheck = { chain = ["typecheck:mypy"] }
"typecheck:mypy" = "mypy ."
"test" = "pytest"
"test:cov" = "pytest --cov=dembrane --cov-report=term --cov-report=html"

[tool.mypy]
plugins = 'pydantic.mypy'
exclude = ['server/alembic', 'alembic', 'scripts', 'tests']
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
follow_imports = "skip"
module = ["trankit.*"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
testpaths = ["tests", "dembrane"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: mark a test as slow",
]
addopts = "--strict-markers"

[tool.coverage.run]
source = ["dembrane"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 100
output-format = "grouped"
target-version = "py311"

select = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic",
    'scripts',
]
ignore = [
    # mutable defaults
    "B006",
]
unfixable = [
    # disable auto fix for print statements
    "T201",
    "T203",
]
ignore-init-module-imports = true
indent-width = 4

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",  # isort
    "I",
    # bugbear rules
    "B",
    # remove unused imports
    "F401",
    # bare except statements
    "E722",
    # unused arguments
    "ARG",
    # print statements
    # "T201",
    # "T203",
    # misuse of typing.TYPE_CHECKING
    "TCH004",
    # import rules
    "TID251",
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
known-first-party = ["dembrane"]
