version: '3.8'

services:
  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/dembrane;
      /usr/bin/mc policy set download myminio/dembrane;
      minio server /mnt/data --console-address ":9001"
      "
    environment:
      - MINIO_ROOT_USER=dembrane
      - MINIO_ROOT_PASSWORD=dembrane
      - MINIO_VOLUMES=/mnt/data
    volumes:
      - ./minio_data:/mnt/data
    restart: unless-stopped

  redis:
    image: 'bitnami/redis:6.2.14'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis_data:/bitnami/redis/data

  postgres:
    image: pgvector/pgvector:0.6.2-pg16
    restart: unless-stopped
    ports:
      - 5432:5432      
      - 7474:7474  # Neo4j Browser
      - 7687:7687  # Neo4j Bolt protocol
      - 5173:5173
      - 5174:5174
    environment:
      POSTGRES_DB: dembrane
      POSTGRES_USER: dembrane
      POSTGRES_PASSWORD: dembrane
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  neo4j:
    image: neo4j:5.26.4
    volumes:
      - ./neo4j_data/logs:/logs
      - ./neo4j_data/config:/config
      - ./neo4j_data/data:/data
      - ./neo4j_data/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/admin@dembrane
    network_mode: service:postgres
    restart: unless-stopped

  directus:
    build:
      context: ../directus
      dockerfile: Dockerfile
    ports:
      - 8055:8055
    volumes:
      - ../directus/uploads:/directus/uploads
      - ../directus/templates:/directus/templates
    environment:
      - PUBLIC_URL=http://localhost:8055
      - PORT=8055
      - SECRET=secret
      - TELEMETRY=false
      - ADMIN_EMAIL=admin@dembrane.com
      - ADMIN_PASSWORD=admin
      - ADMIN_TOKEN=admin
      - DB_CLIENT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=dembrane
      - DB_PASSWORD=dembrane
      - DB_DATABASE=dembrane
      - DB_EXCLUDE_TABLES=lightrag_chunk_graph_map,lightrag_doc_chunks,lightrag_doc_full,lightrag_doc_status,lightrag_llm_cache,lightrag_vdb_entity,lightrag_vdb_relation,lightrag_vdb_transcript
      - WEBSOCKETS_ENABLED=true
      - CORS_ENABLED=true
      - CORS_ORIGIN=http://localhost:5173,http://localhost:5174
      - CORS_CREDENTIALS=true
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_SAME_SITE=lax
      - USER_INVITE_URL_ALLOW_LIST=http://localhost:5173/invite
      - USER_REGISTER_URL_ALLOW_LIST=http://localhost:5173/verify-email
      - PASSWORD_RESET_URL_ALLOW_LIST=http://localhost:5173/password-reset
      - STORAGE_LOCATIONS=local,s3
      - STORAGE_S3_KEY=dembrane
      - STORAGE_S3_SECRET=dembrane
      - STORAGE_S3_BUCKET=dembrane
      - STORAGE_S3_ENDPOINT=http://minio:9000
      - EMAIL_TRANSPORT="smtp"
      - EMAIL_FROM=""
      - EMAIL_SMTP_HOST=""
      - EMAIL_SMTP_PORT=587
      - EMAIL_SMTP_USER=""
      - EMAIL_SMTP_PASSWORD=""
      - EMAIL_SMTP_SECURE=false
      - EMAIL_SMTP_IGNORE_TLS=false

    depends_on:
      - postgres
      - redis

  devcontainer:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: base
    environment:
      - DIRECTUS_SECRET=secret
      - DIRECTUS_TOKEN=admin
      - DATABASE_URL=postgresql+psycopg://dembrane:dembrane@postgres:5432/dembrane
      - REDIS_URL=redis://redis:6379
      - API_BASE_URL=http://localhost:8000
      - ADMIN_BASE_URL=http://localhost:5173
      - PARTICIPANT_BASE_URL=http://localhost:5174
      - DIRECTUS_BASE_URL=http://directus:8055
      - DEBUG_MODE=1
      - DISABLE_SENTRY=1
      - SERVE_API_DOCS=1
      - DISABLE_REDACTION=1
      - STORAGE_S3_KEY=dembrane
      - STORAGE_S3_SECRET=dembrane
      - STORAGE_S3_BUCKET=dembrane
      - STORAGE_S3_ENDPOINT=http://minio:9000
      - NEO4J_URL=bolt://neo4j:7687
      
    volumes:
      - ../..:/workspaces:cached
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: service:postgres
    command: sleep infinity
    depends_on:
      - postgres
      - redis
      - neo4j


