name: dev-deploy-vercel-dashboard
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_DASHBOARD }}
on:
  push:
    branches:
      - main

concurrency:
  group: dev-deploy-vercel-dashboard-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dev-deploy-vercel-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('echo/frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: echo/frontend

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest
        working-directory: echo/frontend

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=staging --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: echo/frontend

      - name: Build Project Artifacts
        run: vercel build --target=staging --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: echo/frontend

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --target=staging --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: echo/frontend